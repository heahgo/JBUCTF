from myCrypto import *
from pwn import *
from base64 import b64encode, b64decode

p = remote("172.17.0.2", 10008)


def xor_bytes(a, b, block_size):
    result = b""
    for i in range(block_size):
        result += bytes({a[i] ^ b[i]})
    return result


BLOCK_SIZE = 16
key = b"B" * 16
crypto = myCrypto(key)
p1 = b"A" * 16

p.recvuntil(b">> ")
p.sendline(b"2")
p.recvuntil(b"Input text (base64) >> ")
p.sendline(b64encode(p1))
p2 = p.recvline()[:-1]
p2 = b64decode(p2)[:16]

p1 = crypto.mixColumns(crypto.shiftRows(crypto.subBytes(byte2state(p1))))
p1 = state2byte(p1)
key = xor_bytes(p1, p2, 16)

p.recvuntil(b">> ")
p.sendline(b"3")
enc_flag = p.recvline()[:-1]
enc_flag = b64decode(enc_flag)

crypto = myCrypto(key)
flag = unpad(crypto.decrypt(enc_flag), BLOCK_SIZE)
print(f"flag : {flag.decode()}")
